{"ast":null,"code":"import _classCallCheck from \"/home/matt/myproject/reduxthunk/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/matt/myproject/reduxthunk/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/matt/myproject/reduxthunk/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/matt/myproject/reduxthunk/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/matt/myproject/reduxthunk/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/matt/myproject/reduxthunk/src/RedditChildren.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProducts } from \"./action\";\n\nvar RedditChildren =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RedditChildren, _React$Component);\n\n  function RedditChildren() {\n    _classCallCheck(this, RedditChildren);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RedditChildren).apply(this, arguments));\n  }\n\n  _createClass(RedditChildren, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchProducts());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var products = this.props.products;\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, products.map(function (child) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, children.title);\n      }));\n    }\n  }]);\n\n  return RedditChildren;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.items\n  };\n};\n\nexport default connect(mapStateToProps)(RedditChildren);","map":{"version":3,"sources":["/home/matt/myproject/reduxthunk/src/RedditChildren.js"],"names":["React","connect","fetchProducts","RedditChildren","props","dispatch","products","map","child","children","title","Component","mapStateToProps","state","items"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,UAA9B;;IAEMC,c;;;;;;;;;;;;;wCACoB;AAChB,WAAKC,KAAL,CAAWC,QAAX,CAAoBH,aAAa,EAAjC;AACH;;;6BAEQ;AAAA,UACGI,QADH,GACe,KAAKF,KADpB,CACGE,QADH;AAKL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,QAAQ,CAACC,GAAT,CAAa,UAAAC,KAAK;AAAA,eACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,QAAQ,CAACC,KAAd,CADe;AAAA,OAAlB,CADL,CADJ;AAOH;;;;EAjBsBV,KAAK,CAACW,S;;AAoBjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BP,IAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeQ;AADK,GAAL;AAAA,CAA7B;;AAKA,eAAeb,OAAO,CAACW,eAAD,CAAP,CAAyBT,cAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProducts } from \"./action\";\n\nclass RedditChildren extends React.Component {\n      componentDidMount() {\n          this.props.dispatch(fetchProducts());\n      }\n  \n      render() {\n          const  {products} = this.props;\n  \n         \n  \n          return (\n              <ul>\n                  {products.map(child => (\n                      <li>{children.title}</li>\n                  ))}\n              </ul>\n          );\n      }\n  }\n  \n  const mapStateToProps = state => ({\n      products: state.products.items,\n      \n  });\n  \n  export default connect(mapStateToProps)(RedditChildren);"]},"metadata":{},"sourceType":"module"}